<?xml version="1.0" encoding="UTF-8"?>

<extension engine="1.0">

	<id>pun_usertagging</id>
	<title>Usertagging for PunBB</title>

	<version>1.1.0</version>

	<description>Usertagging for PunBB enables 'user tagging' which is the tagging feature you see on a lot of social networking websites like Facebook or Twitter that allows you to directly address a user by putting an at symbol in front of their username, like @username. Right now, the modification only adds a link to the user's profile in posts and alerts the user who has been tagged, but there are plans for a tag 'leaderboard' where users can see who is being tagged most and where.</description>

	<author>Nuri Hodges</author>

	<minversion>1.3</minversion>
	<maxtestedon>1.3.4</maxtestedon>

	<hooks>
		
		<hook id="vt_row_pre_display"><![CDATA[
		
			preg_match_all("/@[a-zA-Z0-9_-]+/", $forum_page['message']['message'], $matches);
			
			if(!empty($matches)) {
			
				$matches = $matches[0];
				
				foreach($matches as $key => $val) {

					$username = substr($val,1);

					if (strlen($username) < 25 && strlen($username) > 2) {

						$q = array(
					
							'SELECT' => 'u.username, u.id',
							'FROM'   => 'users AS u',
							'WHERE'  => 'u.username = \'' . $username . '\'',
							'LIMIT'  => '0,1'
					
						);
					
						$r = $forum_db->query_build($q) or error(__FILE__, __LINE__);
					
						if($forum_db->num_rows($r) > 0) {
					
							$punbb_user = $forum_db->fetch_assoc($r);
					
							$forum_page['message']['message'] = preg_replace("/(" . $val . ")/", "<a href=\"" . forum_link($forum_url['user'], $punbb_user['id']) . "\">$1</a>", $forum_page['message']['message']);
					
						}
				
					}
			
				}
			}
		
		]]></hook>
		
		<hook id="po_pre_redirect"><![CDATA[
		
			preg_match_all("/@[a-zA-Z0-9_-]+/", $message, $matches);
			
			if(!empty($matches)) {
			
				$matches = $matches[0];
			
				foreach($matches as $key => $val) {

					$username = substr($val, 1);
				
					if (strlen($username) < 25 && strlen($username) > 2) {				

						$q = array(
					
							'SELECT' => 'u.username, u.id, u.group_id',
							'FROM'   => 'users AS u',
							'WHERE'  => 'u.username = \'' . $username . '\'',
							'LIMIT'  => '0,1'
					
						);
					
						$r = $forum_db->query_build($q) or error(__FILE__, __LINE__);
					
						if($forum_db->num_rows($r) > 0) {
					
							$punbb_user = $forum_db->fetch_assoc($r);
						
							$usertag_topicid = isset($post_info['topic_id']) ? $post_info['topic_id'] : $new_tid;
						
							# Check if the user tagged has permissions to read the thread
						
								$q = array(
									'SELECT'	=> 'subject',
									'FROM'		=> 'topics AS t',
									'JOINS'		=> array(
										array(
											'LEFT JOIN'		=> 'forum_perms AS fp',
											'ON'			=> '(fp.forum_id=t.forum_id AND fp.group_id=' . $punbb_user['group_id'] . ')'
										)
									),
									'WHERE'		=> '(fp.read_forum IS NULL OR fp.read_forum=1) AND t.id=' . $usertag_topicid . ' AND t.moved_to IS NULL'
								);
							
								$r = $forum_db->query_build($q) or error(__FILE__, __LINE__);
							
								if (!$forum_db->num_rows($r)) { message($lang_common['Bad request']); }
							
							# Check if the user is already subscribed
						
								$q = array(
									'SELECT'	=> '1',
									'FROM'		=> 'subscriptions AS s',
									'WHERE'		=> 'user_id=' . $punbb_user['id'] . ' AND topic_id=' . $usertag_topicid
								);
							
								$r = $forum_db->query_build($q) or error(__FILE__, __LINE__);
							
							# Subscribe the tagged user to the post/topic, send subscription, then unsubscribe the user
						
								if(!$forum_db->num_rows($r)) {
							
									$q = array(
										'UPDATE'	=> 'users',
										'SET'		=> 'notify_with_post=1',
										'WHERE'		=> 'id=' . $punbb_user['id']
									);
								
									$forum_db->query_build($q) or error(__FILE__, __LINE__);
								
									$notify_reset = ($forum_db->affected_rows() > 0) ? true : false;
								
									$q = array(
										'INSERT'	=> 'user_id, topic_id',
										'INTO'		=> 'subscriptions',
										'VALUES'	=> $punbb_user['id'] . ' ,' . $usertag_topicid
									);
								
									$forum_db->query_build($q) or error(__FILE__, __LINE__);
								
									# Pass topic id onto send_subscription if it's a new topic
								
										if(!isset($post_info['topic_id'])) { $post_info['topic_id'] = $usertag_topicid; }
								
									send_subscriptions($post_info, $new_pid);
								
									$q = array(
										'DELETE'	=> 'subscriptions',
										'WHERE'		=> 'user_id=' . $punbb_user['id'] . ' AND topic_id=' . $usertag_topicid
									);
								
									$forum_db->query_build($q) or error(__FILE__, __LINE__);
								
									if($notify_reset) {
								
										$q = array(
											'UPDATE'	=> 'users',
											'SET'		=> 'notify_with_post=0',
											'WHERE'		=> 'id=' . $punbb_user['id']
										);
									
										$forum_db->query_build($q) or error(__FILE__, __LINE__);
								
									}
							
								}
					
						}
				
					}
				
				}
			}
		
		]]></hook>
		
		<hook id="fn_send_subscriptions_qr_get_users_to_notify"><![CDATA[
		
			if(empty($previous_post_time)) {
			
				$q = array(
					'SELECT'	=> 'p.posted',
					'FROM'		=> 'posts AS p',
					'WHERE'		=> 'p.topic_id=' . $post_info['topic_id'],
					'ORDER BY'	=> 'p.id DESC',
					'LIMIT'		=> '0, 1'
				);
				
				$r = $forum_db->query_build($q) or error(__FILE__, __LINE__);
				
				$previous_post_time = $forum_db->result($r) - 1000;
				
				$query['WHERE'] = 'b.username IS NULL AND COALESCE(o.logged, u.last_visit)>' . $previous_post_time . ' AND (fp.read_forum IS NULL OR fp.read_forum=1) AND s.topic_id=' . $post_info['topic_id'] . ' AND u.id!=' . $post_info['poster_id'];
				
			}
		
		]]></hook>

	</hooks>

</extension>
